
/* ROUND ROBIN SCHEDULING  */


#include<stdio.h>
#include<conio.h>
void main()
{
 int time,pid[10],need[10],wait[10],turnt[10],i,j,n,m;
 int burstt[10],flag[10],totalt=0,totalwt=0;
 float avgwt,avgtat;
printf("\t\t ROUND ROBIN SCHEDULING\n"); 
printf("Enter the number of Processors \n");
 scanf("%d",&n);

 m=n;
 
printf("\n Enter the Timeslice \n");
 
scanf("%d",&time);
 for(i=1;i<=n;i++)

 {
   printf("\n Enter the process ID %d:",i);
   
scanf("%d",&pid[i]);
   
printf("\n Enter the Burst Time for the process:\n");
   
scanf("%d",&burstt[i]);
   need[i]=burstt[i];
 }

 for(i=1;i<=n;i++)
 
{
  flag[i]=1;
  wait[i]=0;
 }
 
while(n!=0)

 {
   for(i=1;i<=n;i++)
   
{
     if(need[i]>=time)
     
{
       for(j=1;j<=n;j++)
       
{
	  if((i!=j)&&(flag[i]==1)&&(need[j]!=0))
	  
wait[j]+=time;
       }
      
need[i]-=time;
      
 if(need[i]==0)
      
 {
	 flag[i]=0;
	 n--;
       }
     }
     
else
    
 {
       for(j=1;j<=n;j++)
      
 {
	  if((i!=j)&&(flag[i]==1)&&(need[j]!=0))
	  
wait[j]+=need[i];
       }
       
need[i]=0;
       
n--;
       
flag[i]=0;
  
 }
 }
}

for(i=1;i<=m;i++)

{
  turnt[i]=wait[i]+burstt[i];
  
totalwt=totalwt+wait[i];
  
totalt=totalt+turnt[i];
}

avgwt=(float)totalwt/m;

avgtat=(float)totalt/m;


printf("\n\n ROUND ROBIN SCHEDULING ALGORITHM \n\n");

printf("\n\n Process \t Process ID  \t BurstTime \t Waiting Time \t TurnaroundTime \n ");

for(i=1;i<=m;i++)
{
 
 printf("\n %5d \t %5d \t\t %5d \t\t %5d \t\t %5d \n", i,pid[i],burstt[i],wait[i],turnt[i]);
}


printf("\n The average Waiting Time=%4.2f",avgwt);

printf("\n The average Turn around Time=%4.2f",avgtat);
getch();
}         

